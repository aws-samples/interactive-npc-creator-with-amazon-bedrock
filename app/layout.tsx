'use client'
import { Authenticator } from '@aws-amplify/ui-react'
import { Amplify } from 'aws-amplify';
import '@aws-amplify/ui-react/styles.css'
import './globals.css'
import React, { useState, useEffect, useRef } from 'react';
import {
  AppLayout,
  BreadcrumbGroup,
  Container,
  ContentLayout,
  Flashbar,
  Header,
  HelpPanel,
  Link,
  SideNavigation,
  TopNavigation,
  SplitPanel,
} from '@cloudscape-design/components';
import { I18nProvider } from '@cloudscape-design/components/i18n';
import messages from '@cloudscape-design/components/i18n/messages/all.en';
import CharacterCreator from './npc/[id]/converse/page';
import { usePathname } from 'next/navigation'
import outputs from "../amplify_outputs.json";
import { Predictions } from "@aws-amplify/predictions";

Amplify.configure(outputs);
const existingConfig = Amplify.getConfig();
Amplify.configure({
  ...existingConfig,
  API: {
    ...existingConfig.API,
    REST: outputs.custom.API,
    
  },
  Predictions: outputs.custom.Predictions,
});

const LOCALE = 'en';

// export const metadata = {
//   title: 'Next.js',
//   description: 'Generated by Next.js',
// }

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const pathname = usePathname()
  const [showNav, setShowNav] = useState(pathname==='/'?false:true);
  return (
    <html lang="en">
      <body>
      <Authenticator>
      {({ signOut, user }) => (
        <I18nProvider locale={LOCALE} messages={[messages]}>
                  <TopNavigation
          identity={{
            href: '/',
            title: 'Dynamic NPC dialogue with GenAI Powered by Amazon Bedrock',
            // logo: { src: '/icon.png', alt: 'logo' },
          }}
          utilities={[
            {
              type: 'button',
              // iconName: 'notification',
              text: 'Sign out',
              ariaLabel: 'Sign out',
              badge: true,
              disableUtilityCollapse: true,
              onClick:signOut
            }
          ]}
        />
          <AppLayout
            disableContentPaddings
            navigationOpen={showNav}
            onNavigationChange={({detail})=>{setShowNav(detail.open)}}
            navigation={
              <SideNavigation
                activeHref={pathname}
                header={{
                  href: '/',
                  text: 'Dynamic NPC',
                }}
                items={[{ type: 'link', text: `Create`, href: `/npc/create` },
                { type: 'link', text: `NPCs`, href: `/npc/list` },
                ]}

              />
            }
            toolsHide
            // toolsOpen={false}
            // tools={null}
            content= {children}
          splitPanel={null}
          />
        </I18nProvider>
          )}
    </Authenticator>
      </body>
    </html >
  )
}
